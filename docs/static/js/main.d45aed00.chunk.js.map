{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","console","log","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","defaultCategories","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,uBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBACFC,QAAQC,IAAI,iBAETN,EAAWO,OAAOC,OAAO,IACxBV,GAAc,SAAAW,GAAI,OAAKT,GAAL,mBAAoBS,OACtCR,EAAc,MAKlB,UACI,4BACMD,IAEN,uBACIU,KAAK,OACLC,MAAQX,EACRY,SArBc,SAACT,GACvBF,EAAcE,EAAEU,OAAOF,c,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAWH,GAD/C,gEAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QARtB,kBAWZM,GAXY,4CAAH,sDCGPO,EAAc,SAAC,GAAqB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAClC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCAJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECNwB,SAAEA,GAC1B,MAA0BhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAW,WACPxB,EAASC,GACJwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAAEpB,IAEEqB,EDV0BK,CAAc1B,GAAlCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAErB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACb,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,aADe,CACd,EAAD,eAESA,GADCA,EAAIC,aEfzBgB,EAAe,SAAC,GAAsC,IAAD,IAAnCC,yBAAmC,MAAf,CAAC,QAAc,EAG9D,EAAoC5C,mBAAU4C,GAA9C,mBAAOC,EAAP,KAAmB9C,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ8C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCZlC8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.d45aed00.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n    const handelInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log('HandleSubmit!')\r\n\r\n        if(inputValue.trim().length>2) {\r\n            setCategories(cats => [inputValue, ...cats])\r\n            setInputValue('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <p>\r\n                { inputValue }\r\n            </p>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handelInputChange }\r\n            />\r\n        </form> \r\n    )    \r\n}\r\n\r\nAddCategory.propTypes  = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}","export const getGifs = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=ISP8cpCujSQZxSKPAF2RmRQ054fBcl2L&`\r\n    const resp = await fetch(url)\r\n    const { data } = await resp.json()\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const GifGridItem = ( { title, url} ) => { // Recibo cada prop suelta\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nGifGridItem.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category )\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => // Desestructuramos los datos de dentro de images\r\n                        <GifGridItem\r\n                            key={ img.id }\r\n                            { ...img } // Mando todas las propiedades de manera independiente\r\n                        />\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nGifGrid.propTypes  = {\r\n    category: PropTypes.string.isRequired,\r\n}","import { useState, useEffect } from 'react'; \r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n    }, [ category ]) // Se volverá a ejecutar si la categoría cambia\r\n\r\n    return state // Es { data: [], loading: true};\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = ({ defaultCategories = ['Goku'] }) => {\r\n\r\n    // const [categories, setCategories] = useState(['One Punch'])\r\n    const [categories, setCategories] = useState( defaultCategories )\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr />\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map( category => \r\n                        <GifGrid\r\n                            key={ category }\r\n                            category={ category }\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css'\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}